#!/bin/bash

KEYFILE="$1"
NAME="$2"
VALUE="$3"

case $KEYFILE in
    $null)
      printf "add.KEY <key_file> <name> <value>\n add.KEY scans the target file for the name of the key, so the filename and key label can differ.\n (Label being the name of the associative array)\n This is for hard-entry of keys, when you know the entire string they need to be.\n It is usually easier to use specific add scripts like 'add.PART' which assumes all paths start with /mnt\n"
    ;;
    "-h")
      printf "add.KEY <key_file> <name> <value>\n add.KEY scans the target file for the name of the key, so the filename and key label can differ.\n (Label being the name of the associative array)\n This is for hard-entry of keys, when you know the entire string they need to be.\n It is usually easier to use specific add scripts like 'add.PART' which assumes all paths start with /mnt\n"
    ;;
    *)
      LABEL=$( cat $KEYFILE | grep = | cut -f1 -d [ )
      printf "$LABEL[\'$NAME\']=\'$VALUE\'\n" >> $HOME/Arch/Pre-chroot/parts
    ;;
esac


